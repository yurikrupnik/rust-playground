# Works, fully, commenting for testing helm template generator
load('ext://helm_resource', 'helm_resource', 'helm_repo')

helm_repo('bitnami', 'https://charts.bitnami.com/bitnami', labels=["repo"])
helm_repo('devtron', 'https://helm.devtron.ai', labels=["repo"])
helm_repo('hashicorp', 'https://helm.releases.hashicorp.com', labels=["repo"])
# helm_repo('crossplane-stable', 'https://charts.crossplane.io/stable', labels=["helm"])
# crossplane-stable https://charts.crossplane.io/stable

# helm_resource('nginx', 'bitnami/nginx-ingress-controller', labels=["helm"])
#helm_resource('mysql','bitnami/mysql', labels=["mysql", "db", "helm"])
# helm_resource('mongodb','bitnami/mongodb', labels=["monitoring", "helm"])

# helm_resource('crossplane-stable', 'crossplane-stable/crossplane', labels=["helm", "monitoring", "security"])
# helm_resource('cert-manager', 'bitnami/cert-manager', labels=["helm", "monitoring", "security"])
# helm_resource('external-secrets', 'external-secrets/external-secrets', labels=["helm", "monitoring", "security"])
# helm_resource('redis', 'bitnami/redis', labels=["redis", "db", "helm"])
helm_resource('kube-prometheus','bitnami/kube-prometheus', labels=["monitoring", "helm"])
# helm_resource('grafana','bitnami/grafana', labels=["monitoring", "helm"])
# helm_resource('jenkins','bitnami/jenkins', labels=["monitoring", "helm"])
# helm_resource('consul','hashicorp/consul', labels=["helm", "monitoring"])
# helm_resource('vault','hashicorp/vault', labels=["helm", "monitoring"])

k8s_resource("kube-prometheus", port_forwards="3000:9090")
# k8s_resource("grafana-loki", port_forwards="3005:3100")
# k8s_resource("grafana", port_forwards="3001:3000")
# k8s_resource("jenkins", port_forwards="3011:80")
# k8s_resource("vault", port_forwards="3010:8200")
# k8s_resource("consul", port_forwards="3003:8500")

#load('ext://helm_remote', 'helm_remote')
#helm_remote('grafana',
#            repo_name='bitnami',
#            namespace='grafana',
#            create_namespace="true",
#            repo_url='https://charts.bitnami.com/bitnami', labels=["helm", "grafana"])
#helm_remote('mysql',
#            repo_name='bitnami',
#            namespace='mysql',
#            create_namespace="true",
#            repo_url='https://charts.bitnami.com/bitnami', labels=["helm", "mysql"])
#helm_remote('redis',
#            repo_name='bitnami',
#            namespace='redis',
#            create_namespace="true",
#            repo_url='https://charts.bitnami.com/bitnami', labels=["helm", "redis"])
#local_resource('vault',
    #cmd='helm template vault hashicorp/vault -n vault -f ./k8s/base/helm/vault-values.yaml > ./k8s/base/helm/manifests/vault.yaml',
    # cmd='helm template vault hashicorp/vault -n vault --output-dir ./k8s/base/helm/manifests/',
    # cmd="helm template vault hashicorp/vault -n vault --output-dir ./k8s/base/helm/manifests/",
    # deps=["/k8s/base/helm/vault-values.yaml"],
    # labels=['manifests', "helm", "generator"]
# )

k8s_yaml(kustomize("."))

k8s_resource("argocd-server", port_forwards="8888:8080")